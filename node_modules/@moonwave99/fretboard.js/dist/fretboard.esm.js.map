{"version":3,"file":"fretboard.esm.js","sources":["../src/fretboard/utils.ts","../src/chords/chords.ts","../src/constants.ts","../src/fretboardSystem/systems/systems.ts","../src/fretboardSystem/FretboardSystem.ts","../src/fretboard/Fretboard.ts","../src/tetrachords/tetrachords.ts","../src/tools/tools.ts"],"sourcesContent":["import { paramCase } from 'change-case';\nimport { Selection, BaseType } from 'd3-selection';\nimport { Position, Options } from './Fretboard';\n\nexport function getStringThickness({\n  stringWidth,\n  stringIndex\n}: {\n  stringWidth: number | [number];\n  stringIndex: number;\n}): number {\n  if (typeof stringWidth === 'number') {\n    return stringWidth;\n  }\n  return stringWidth[stringIndex] || 1;\n}\n\nexport function generateStrings({\n  stringCount,\n  stringWidth,\n  height\n}: {\n  stringCount: number;\n  stringWidth: number | [number];\n  height: number;\n}): number[] {\n  const strings = [];\n  let currentStringWidth = 0;\n\n  for (let i = 0; i < stringCount; i++) {\n    currentStringWidth = getStringThickness({ stringWidth, stringIndex: i });\n    let y = (height / (stringCount - 1)) * i;\n    if (i === 0) {\n      y += currentStringWidth / 2;\n    }\n    if (i === stringCount - 1) {\n      y -= currentStringWidth / 2;\n    }\n    strings.push(y);\n  }\n  return strings;\n}\n\nexport function generateFrets({\n  scaleFrets,\n  fretCount\n}: {\n  scaleFrets: boolean;\n  fretCount: number;\n}): number[] {\n  const fretRatio = Math.pow(2, 1 / 12);\n  const frets = [0];\n\n  for (let i = 1; i <= fretCount; i++) {\n    let x = (100 / fretCount) * i;\n    if (scaleFrets) {\n      x = 100 - 100 / Math.pow(fretRatio, i);\n    }\n    frets.push(x);\n  }\n  return frets.map(x => x / frets[frets.length - 1] * 100);\n}\n\nconst accidentalMap: { symbol: string; replacement: string }[] = [{\n  symbol: '##',\n  replacement: 'double-sharp'\n}, {\n  symbol: 'bb',\n  replacement: 'double-flat'\n}, {\n  symbol: '#',\n  replacement: 'sharp'\n}, {\n  symbol: 'b',\n  replacement: 'flat'\n}];\n\nfunction valueRenderer(key: string, value: string | number | boolean): string {\n  if (typeof value === 'boolean') {\n    return !value ? 'false' : null;\n  }\n  if (key === 'note') {\n    for (let i = 0; i < accidentalMap.length; i++) {\n      const { symbol, replacement } = accidentalMap[i];\n      if (`${value}`.endsWith(symbol)) {\n        return `${`${value}`[0]}-${replacement}`;\n      }\n    }\n    return `${value}`;\n  }\n  return `${value}`;\n}\n\nfunction classRenderer(prefix: string, key: string, value: string | number | boolean): string {\n  return [\n    'dot',\n    prefix,\n    paramCase(key),\n    valueRenderer(key, value),\n  ].filter(x => !!x).join('-');\n}\n\nexport function dotClasses(dot: Position, prefix = ''): string {\n  return [\n    prefix ? `dot-${prefix}` : null,\n    ...Object.entries(dot)\n      .map(([key, value]: [string, string|Array<string>]) => {\n        let valArray: string[];\n        if (!(value instanceof Array)) {\n          valArray = [value];\n        } else {\n          valArray = value;\n        }\n        return valArray.map(value => classRenderer(prefix, key, value)).join(' ');\n      })\n  ].filter(x => !!x).join(' ');\n}\n\nexport function getDimensions({\n  topPadding,\n  bottomPadding,\n  leftPadding,\n  rightPadding,\n  width,\n  height,\n  showFretNumbers,\n  fretNumbersHeight\n}: {\n  topPadding: number;\n  bottomPadding: number;\n  leftPadding: number;\n  rightPadding: number;\n  width: number;\n  height: number;\n  showFretNumbers: boolean;\n  fretNumbersHeight: number;\n}): {\n  totalWidth: number;\n  totalHeight: number;\n} {\n  const totalWidth = width + leftPadding + rightPadding;\n  let totalHeight = height + topPadding + bottomPadding;\n\n  if (showFretNumbers) {\n    totalHeight += fretNumbersHeight;\n  }\n  return { totalWidth, totalHeight };\n}\n\ntype GetPositionParams = {\n  event: MouseEvent;\n  stringsGroup: Selection<BaseType, unknown, HTMLElement, unknown>;\n  leftPadding: number;\n  nutWidth: number;\n  strings: number[];\n  frets: number[];\n  dots: Position[];\n}\n\nexport const getPositionFromMouseCoords = ({\n  event,\n  stringsGroup,\n  leftPadding,\n  nutWidth,\n  strings,\n  frets,\n  dots\n}: GetPositionParams): Position => {\n  const {\n    width: stringsGroupWidth,\n    height: stringsGroupHeight\n  } = (stringsGroup.node() as HTMLElement).getBoundingClientRect();\n  const bounds = (event.target as HTMLElement).getBoundingClientRect();\n  const x = event.clientX - bounds.left;\n  const y = event.clientY - bounds.top;\n\n  let foundString = 0;\n\n  const stringDistance = stringsGroupHeight / (strings.length - 1);\n\n  for (let i = 0; i < strings.length; i++) {\n     if (y < stringDistance * (i + 1)) {\n       foundString = i;\n       break;\n     }\n  }\n\n  let foundFret = -1;\n  const percentX = (Math.max(0, x - leftPadding) / stringsGroupWidth) * 100;\n\n  for (let i = 0; i < frets.length; i++) {\n    if (percentX < frets[i]) {\n      foundFret = i;\n      break;\n    }\n    foundFret = i;\n  }\n\n  if (x < leftPadding + nutWidth) {\n    foundFret = 0;\n  }\n\n  const foundDot = dots.find(({ fret, string }) => fret === foundFret && string === foundString + 1);\n  return foundDot || {\n    string: foundString + 1,\n    fret: foundFret\n  }\n}\n\nexport function createHoverDiv({\n  bottomPadding,\n  showFretNumbers,\n  fretNumbersHeight\n}: Options): HTMLDivElement {\n  const hoverDiv = document.createElement('div');\n  const bottom = bottomPadding\n    + (showFretNumbers ? fretNumbersHeight : 0);\n  hoverDiv.className = 'hoverDiv';\n  hoverDiv.style.position = 'absolute';\n  hoverDiv.style.top = '0';\n  hoverDiv.style.bottom = `${bottom}px`;\n  hoverDiv.style.left = '0';\n  hoverDiv.style.right = '0';\n  return hoverDiv;\n}\n","import { Position } from '../fretboard/Fretboard';\n\nexport function parseChord(chord: string): {\n  positions: Position[];\n  mutedStrings: number[];\n} {\n  const positions = [] as Position[];\n  const mutedStrings = [] as number[];\n  const splitter = chord.indexOf('-') > -1 ? '-' : '';\n  chord.split(splitter).reverse().forEach((fret, string) => {\n    if (fret === '0') {\n      return;\n    }\n    if (fret === 'x') {\n      mutedStrings.push(string + 1);\n      return;\n    }\n    positions.push({\n      fret: +fret,\n      string: string + 1\n    });\n  });\n  return {\n    positions,\n    mutedStrings\n  };\n}\n","export const MIDDLE_FRET = 11;\nexport const THROTTLE_INTERVAL = 50;\nexport const DEFAULT_FRET_COUNT = 15;\n\nexport const DEFAULT_COLORS = {\n    line: '#666',\n    highlight: '#ff636c',\n    dotStroke: '#555',\n    dotFill: 'white',\n    fretNumber: '#00000099',\n    mutedString: '#333',\n    dotText: '#111',\n    barres: '#666'\n};\n\nexport const DEFAULT_DIMENSIONS = {\n    width: 960,\n    height: 150,\n    unit: 20,\n    line: 1,\n    nut: 7\n};\n\nexport const DEFAULT_FONT_FAMILY = 'Arial';\nexport const DEFAULT_FONT_SIZE = 12;\n\nexport const GUITAR_TUNINGS = {\n    default: [\"E2\", \"A2\", \"D3\", \"G3\", \"B3\", \"E4\"],\n    halfStepDown: [\"Eb2\", \"Ab2\", \"Db3\", \"Gb3\", \"Bb3\", \"Eb4\"],\n    dropD: [\"D2\", \"A2\", \"D3\", \"G3\", \"B3\", \"E4\"],\n    openG: [\"D2\", \"G2\", \"D3\", \"G3\", \"B3\", \"D4\"],\n    DADGAD: [\"D2\", \"A2\", \"D3\", \"G3\", \"A3\", \"D4\"]\n};","import { chroma as getChroma } from '@tonaljs/note';\nimport { get as getMode } from '@tonaljs/mode';\nimport { Position } from '../../fretboard/Fretboard';\n\nexport enum Systems {\n    pentatonic = 'pentatonic',\n    CAGED = 'CAGED',\n    TNPS = 'TNPS'\n}\n\ntype ScaleDefinition = {\n    box: string[];\n    baseChroma: number;\n    baseOctave: number;\n}\n\ntype GetBoxParams = {\n    root: string;\n    box: number|string;\n    mode?: number|string;\n    system: Systems;\n}\n\nconst DEFAULT_MODE = 0;\nconst DEFAULT_PENTATONIC_MODE = 5;\nconst CAGED_ORDER = 'GEDCA';\n\nconst CAGEDDefinition: ScaleDefinition[] = [\n    {\n        box: [\n            '-6-71',\n            '-34-5',\n            '71-2-',\n            '-5-6-',\n            '-2-34',\n            '-6-71'\n        ],\n        baseChroma: getChroma('G#'),\n        baseOctave: 2\n    },        \n    {\n        box: [\n            '71-2',\n            '-5-6',\n            '2-34',\n            '6-71',\n            '34-5',\n            '71-2'\n        ],\n        baseChroma: getChroma('E#'),\n        baseOctave: 2\n    },    \n    {\n        box: [\n            '-2-34',\n            '-6-71',\n            '34-5',\n            '71-2-',\n            '-5-6-',\n            '-2-34'\n        ],\n        baseChroma: getChroma('D#'),\n        baseOctave: 3\n    },    \n    {\n        box: [\n            '34-5',\n            '71-2',\n            '5-6-',\n            '2-34',\n            '6-71',\n            '34-5'\n        ],\n        baseChroma: getChroma('C'),\n        baseOctave: 3\n    },    \n    {\n        box: [\n            '-5-6-',\n            '-2-34',\n            '6-71-',\n            '34-5-',\n            '71-2-',\n            '-5-6-'\n        ],\n        baseChroma: getChroma('A#'),\n        baseOctave: 2\n    }\n]\n\nconst TNPSDefinition: ScaleDefinition[] = [\n    {\n        box: [\n            '--2-34',\n            '--6-71',\n            '-34-5-',\n            '-71-2-',\n            '4-5-6-',\n            '1-2-3-'\n        ],\n        baseChroma: getChroma('E'),\n        baseOctave: 2\n    },\n    {\n        box: [\n            '--34-5',\n            '--71-2',\n            '4-5-6-',\n            '1-2-3-',\n            '5-6-7-',\n            '2-34--'\n        ],\n        baseChroma: getChroma('D'),\n        baseOctave: 3\n    },\n    {\n        box: [\n            '-4-5-6',\n            '-1-2-3',\n            '5-6-7-',\n            '2-34--',\n            '6-71--',\n            '34-5--'\n        ],\n        baseChroma: getChroma('C'),\n        baseOctave: 3\n    },\n    {\n        box: [\n            '--5-6-7',\n            '--2-34-',\n            '-6-71--',\n            '-34-5--',\n            '-71-2--',\n            '4-5-6--'\n        ],\n        baseChroma: getChroma('B'),\n        baseOctave: 2\n    },\n    {\n        box: [\n            '--6-71',\n            '--34-5',\n            '-71-2-',\n            '4-5-6-',\n            '1-2-3-',\n            '5-6-7-'\n        ],\n        baseChroma: getChroma('A'),\n        baseOctave: 2\n    },\n    {\n        box: [\n            '--71-2',\n            '-4-5-6',\n            '1-2-3-',\n            '5-6-7-',\n            '2-34--',\n            '6-71--'\n        ],\n        baseChroma: getChroma('G'),\n        baseOctave: 2\n    },\n    {\n        box: [\n            '-1-2-3',\n            '-5-6-7',\n            '2-34--',\n            '6-71--',\n            '34-5--',\n            '71-2--'\n        ],\n        baseChroma: getChroma('F'),\n        baseOctave: 2\n    }\n];\n\nexport function getModeFromScaleType(type: string): number {\n    const { modeNum } = getMode(type.replace('pentatonic', '').trim());\n    return modeNum;\n}\n\nfunction getModeOffset(mode: number): number {\n    return getChroma('CDEFGAB'.split('')[mode]);\n}\n\nfunction getPentatonicBoxIndex(box: number, mode: number): number {\n    if (mode === DEFAULT_PENTATONIC_MODE) {\n        return box - 1;\n    }\n    return box % 5;\n}\n\nfunction getBoxPositions({\n    root,\n    box,\n    modeOffset = 0,\n    baseChroma\n}: {\n    root: string;\n    box: string[];\n    modeOffset: number;\n    baseChroma: number;\n}): Position[] {\n    let delta = getChroma(root) - baseChroma - modeOffset;\n    while (delta < -1) {\n        delta += 12;\n    }\n    return box.reduce((memo, item, string) => ([\n        ...memo,\n        ...item.split('').map(\n            (x, i) => x !== '-'\n                ? { string: string + 1, fret: i + delta }\n                : null\n            ).filter(x => !!x)\n    ]), []);\n}\n\nexport function getBox({\n    root,\n    mode = -1,\n    system,\n    box\n}: GetBoxParams): Position[] {\n    let foundBox;\n    let modeNumber = system === Systems.pentatonic\n        ? DEFAULT_PENTATONIC_MODE\n        : DEFAULT_MODE;        \n\n    if (typeof mode === 'string') {\n        modeNumber = getModeFromScaleType(mode);\n    } else if (mode > -1) {\n        modeNumber = mode;\n    }\n\n    switch (system) {\n        case Systems.pentatonic:\n            foundBox = CAGEDDefinition[getPentatonicBoxIndex(+box, modeNumber)];\n            break;\n        case Systems.CAGED:\n            foundBox = CAGEDDefinition[CAGED_ORDER.indexOf(`${box}`)];\n            break;\n        case Systems.TNPS:\n            foundBox = TNPSDefinition[+box - 1];\n            break;\n    }\n    \n    if (!foundBox) {\n        throw new Error(`Cannot find box ${box} in the ${Systems[system]} scale system`);\n    }\n\n    const { baseChroma, box: boxDefinition } = foundBox;\n    \n    return getBoxPositions({\n        root,\n        modeOffset: getModeOffset(modeNumber),\n        baseChroma,\n        box: system === Systems.pentatonic\n            ? boxDefinition.slice().map(x => x.replace('4', '-').replace('7', '-'))\n            : boxDefinition\n    });    \n}","import { get as getNote, chroma as getChroma } from '@tonaljs/note';\nimport { distance, semitones } from '@tonaljs/interval';\nimport { get as getScale } from '@tonaljs/scale';\n\nimport {\n    Systems,\n    getBox,\n    getModeFromScaleType\n} from './systems/systems';\n\nimport { Position, Tuning } from '../fretboard/Fretboard';\n\nimport {\n    GUITAR_TUNINGS,\n    DEFAULT_FRET_COUNT\n} from '../constants';\n\nconst CHROMATIC_SCALE = getScale('C chromatic').notes;\n\nexport type FretboardPosition = {\n    string: number;\n    fret: number;\n    chroma: number;\n}\n\ntype FretboardSystemParams = {\n    tuning?: Tuning;\n    fretCount?: number;\n}\n\ntype ScaleParams = {\n    type: string;\n    root: string;\n    box?: {\n        system: Systems;\n        box: string | number;\n    };\n}\n\nfunction parseNote(note: string): {\n    note: string;\n    octave: number;\n} {\n    let octave = +note.slice(-1);\n    let parsedNote = note;\n    if (isNaN(octave)) {\n        octave = 2;\n    } else {\n        parsedNote = note.slice(0, -1);\n    }\n    return {\n        octave,\n        note: parsedNote\n    };\n}\n\nfunction getOctaveInScale({\n    root,\n    note,\n    octave,\n    baseOctave\n}: {\n    root: string;\n    note: string;\n    octave: number;\n    baseOctave: number;\n}): number {\n    const noteChroma = getChroma(note) || 0;\n    const rootChroma = getChroma(root) || 0;\n\n    if (rootChroma > noteChroma) {\n        return octave - 1 - baseOctave;\n    }\n    return octave - baseOctave;\n}\n\nexport function isPositionInBox({ fret, string }: Position, systemPositions: Position[]): boolean {\n    return !!systemPositions.find(x => x.fret === fret && x.string === string);\n}\n\nexport class FretboardSystem {\n    private tuning: Tuning = GUITAR_TUNINGS.default;\n    private fretCount: number = DEFAULT_FRET_COUNT;\n    private positions: FretboardPosition[];\n    private baseNote: string;\n    private baseOctave: number;\n    constructor(params?: FretboardSystemParams) {\n        Object.assign(this, params);\n        const { note: baseNote, octave: baseOctave } = parseNote(this.tuning[0]);\n        this.baseNote = baseNote;\n        this.baseOctave = baseOctave;\n        this.populate();\n    }\n    getTuning(): Tuning {\n        return this.tuning;\n    }\n    getFretCount(): number {\n        return this.fretCount;\n    }\n    getNoteAtPosition(position: Position): string {\n        const { chroma } = this.positions.find(\n            x => x.string === position.string && x.fret === position.fret\n        );\n        return CHROMATIC_SCALE[chroma];\n    }\n    getScale({\n        type = 'major',\n        root: paramsRoot = 'C',\n        box\n    }: ScaleParams): Position[] {\n        const { baseOctave } = this;\n        const { note: root } = parseNote(paramsRoot);\n        const scaleName = `${root} ${type}`;\n        const { notes, empty, intervals } = getScale(scaleName);\n\n        if (empty) {\n            throw new Error(`Cannot find scale: ${scaleName}`);\n        }\n\n        const mode = getModeFromScaleType(type);\n        const boxPositions: Position[] = box ? this.adjustOctave(getBox({\n            root, mode, ...box\n        }), paramsRoot) : [];\n\n        const reverseMap = notes.map((note, index) => ({\n            chroma: getChroma(note),\n            note,\n            interval: intervals[index],\n            degree: + intervals[index][0]\n        }));\n        return this.positions\n            .filter(({ chroma }) => reverseMap.find(x => x.chroma === chroma))\n            .map(({ chroma, ...rest }) => ({\n                ...reverseMap.find(x => x.chroma === chroma),\n                ...rest\n            }))\n            .map(x => {\n                const octave = this.getOctave(x);\n                const position: Position = {\n                    octave,\n                    octaveInScale: getOctaveInScale({ root, octave, baseOctave, ...x }),\n                    ...x\n                };\n                if (boxPositions.length && isPositionInBox(x, boxPositions)) {\n                    position.inBox = true;\n                }\n                return position;\n            });\n    }\n    private adjustOctave(positions: Position[], root: string): Position[] {\n        const { tuning } = this;\n        const rootOffset = semitones(distance(tuning[0], root)) >= 12;\n        const negativeFrets = positions.filter(x => x.fret < 0).length > 0;\n        return positions.map(({ string, fret }) => ({\n            string,\n            fret: rootOffset || negativeFrets ? fret + 12 : fret\n        }));\n    }\n    private populate(): void {\n        const { tuning, fretCount } = this;\n        this.positions = tuning\n            .slice().reverse()\n            .reduce((memo, note, index) => {\n                const string = index + 1;\n                const { chroma } = getNote(note);\n                const filledString = Array.from(\n                    { length: fretCount + 1 },\n                    (_, fret) => ({\n                        string,\n                        fret,\n                        chroma: (chroma + fret) % 12\n                    })\n                );\n                return [...memo, ...filledString];\n            }, []);\n    }\n    private getOctave({ fret, string, chroma, note }: {\n        fret: number;\n        string: number;\n        note: string;\n        chroma: number;\n    }): number {\n        const { tuning } = this;\n        const baseNoteWithOctave = tuning[tuning.length - string];\n        const { note: baseNote, octave: baseOctave } = parseNote(baseNoteWithOctave);\n        const baseChroma = getChroma(baseNote);\n\n        let octaveIncrement = chroma < baseChroma ? 1 : 0;\n\n        if (note === 'B#' && octaveIncrement > 0) {\n            octaveIncrement--;\n        } else if (note === 'Cb' && octaveIncrement === 0) {\n            octaveIncrement++;\n        }\n        octaveIncrement += Math.floor(fret / 12);\n        return baseOctave + octaveIncrement;\n    }\n}","import {\n  select,\n  Selection,\n  ValueFn,\n  BaseType\n} from 'd3-selection';\n\nimport { throttle } from 'throttle-debounce';\n\nimport {\n  generateStrings,\n  generateFrets,\n  getStringThickness,\n  dotClasses,\n  getDimensions,\n  getPositionFromMouseCoords,\n  createHoverDiv\n} from './utils';\n\nimport { parseChord } from '../chords/chords';\n\nimport {\n  MIDDLE_FRET,\n  THROTTLE_INTERVAL,\n  GUITAR_TUNINGS,\n  DEFAULT_COLORS,\n  DEFAULT_DIMENSIONS,\n  DEFAULT_FRET_COUNT,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE\n} from '../constants';\n\nimport { FretboardSystem } from '../fretboardSystem/FretboardSystem';\nimport { Systems } from '../fretboardSystem/systems/systems';\n\nexport type Tuning = string[];\n\nexport type Position = {\n  string: number;\n  fret: number;\n  note?: string;\n  disabled?: boolean;\n  octave?: number;\n  octaveInScale?: number;\n  inBox?: boolean;\n  interval?: string;\n  degree?: number;\n  chroma?: number;\n} & Record<string, string | number | boolean | Array<string | number>>;\n\ntype FretboardHandler = (position: Position, event: MouseEvent) => void;\n\nexport type Barre = {\n  fret: number;\n  stringFrom?: number;\n  stringTo?: number;\n}\n\nexport const defaultOptions = {\n  el: '#fretboard',\n  tuning: GUITAR_TUNINGS.default,\n  stringCount: 6,\n  stringWidth: DEFAULT_DIMENSIONS.line,\n  stringColor: DEFAULT_COLORS.line,\n  fretCount: DEFAULT_FRET_COUNT,\n  fretWidth: DEFAULT_DIMENSIONS.line,\n  fretColor: DEFAULT_COLORS.line,\n  nutWidth: DEFAULT_DIMENSIONS.nut,\n  nutColor: DEFAULT_COLORS.line,\n  middleFretColor: DEFAULT_COLORS.highlight,\n  middleFretWidth: 3 * DEFAULT_DIMENSIONS.line,\n  scaleFrets: true,\n  crop: false,\n  fretLeftPadding: 0,\n  topPadding: DEFAULT_DIMENSIONS.unit,\n  bottomPadding: DEFAULT_DIMENSIONS.unit * .75,\n  leftPadding: DEFAULT_DIMENSIONS.unit,\n  rightPadding: DEFAULT_DIMENSIONS.unit,\n  height: DEFAULT_DIMENSIONS.height,\n  width: DEFAULT_DIMENSIONS.width,\n  dotSize: DEFAULT_DIMENSIONS.unit,\n  dotStrokeColor: DEFAULT_COLORS.dotStroke,\n  dotStrokeWidth: 2 * DEFAULT_DIMENSIONS.line,\n  dotTextSize: DEFAULT_FONT_SIZE,\n  dotFill: DEFAULT_COLORS.dotFill,\n  dotText: (): string => '',\n  disabledOpacity: 0.9,\n  showFretNumbers: true,\n  fretNumbersHeight: 2 * DEFAULT_DIMENSIONS.unit,\n  fretNumbersMargin: DEFAULT_DIMENSIONS.unit,\n  fretNumbersColor: DEFAULT_COLORS.line,\n  font: DEFAULT_FONT_FAMILY,\n  barresColor: DEFAULT_COLORS.barres\n};\n\nexport const defaultMuteStringsParams = {\n  strings: [] as number[],\n  width: 15,\n  strokeWidth: 5,\n  stroke: DEFAULT_COLORS.mutedString\n};\n\nexport type Options = {\n  el: string | BaseType;\n  tuning: Tuning;\n  stringCount: number;\n  stringWidth: number | [number];\n  stringColor: string;\n  fretCount: number;\n  fretWidth: number;\n  fretColor: string;\n  nutWidth: number;\n  nutColor: string;\n  middleFretColor: string;\n  middleFretWidth: number;\n  scaleFrets: boolean;\n  topPadding: number;\n  bottomPadding: number;\n  leftPadding: number;\n  rightPadding: number;\n  height: number;\n  width: number;\n  dotSize: number;\n  dotStrokeColor: string;\n  dotStrokeWidth: number;\n  dotTextSize: number;\n  dotFill: string;\n  dotText: ValueFn<BaseType, unknown, string>;\n  disabledOpacity: number;\n  showFretNumbers: boolean;\n  fretNumbersHeight: number;\n  fretNumbersMargin: number;\n  fretNumbersColor: string;\n  crop: boolean;\n  fretLeftPadding: number;\n  font: string;\n  barresColor: string;\n}\n\ntype Rec = Record<string, string | number | boolean>;\n\ntype Point = {\n  x: number;\n  y: number;\n}\n\ntype MuteStringsParams = {\n  strings: number[];\n  width?: number;\n  strokeWidth?: number;\n  stroke?: string;\n}\n\nfunction getDotCoords({\n  fret,\n  string,\n  frets,\n  strings\n}: {\n  fret: number;\n  string: number;\n  frets: number[];\n  strings: number[];\n}): Point {\n  let x = 0;\n  if (fret === 0) {\n    x = frets[0] / 2;\n  } else {\n    x = frets[fret] - (frets[fret] - frets[fret - 1]) / 2;\n  }\n  return { x, y: strings[string - 1] };\n}\n\nfunction generatePositions({\n  fretCount,\n  stringCount,\n  frets,\n  strings\n}: {\n  fretCount: number;\n  stringCount: number;\n  frets: number[];\n  strings: number[];\n}): Point[][] {\n  const positions = [];\n  for (let string = 1; string <= stringCount; string++) {\n    const currentString = [];\n    for (let fret = 0; fret <= fretCount; fret++) {\n      currentString.push(getDotCoords({ fret, string, frets, strings }))\n    }\n    positions.push(currentString);\n  }\n  return positions;\n}\n\nfunction validateOptions(options: Options): void {\n  const { stringCount, tuning } = options;\n  if (stringCount !== tuning.length) {\n    throw new Error(`stringCount (${stringCount}) and tuning size (${tuning.length}) do not match`);\n  }\n}\n\nexport class Fretboard {\n  strings: number[];\n  frets: number[];\n  positions: Point[][];\n  svg: Selection<BaseType, unknown, HTMLElement, unknown>;\n  wrapper: Selection<BaseType, unknown, HTMLElement, unknown>;\n  private options: Options;\n  private baseRendered: boolean;\n  private hoverDiv: HTMLDivElement;\n  private handlers: Record<string, (event: MouseEvent) => void> = {};\n  private system: FretboardSystem;\n  private dots: Position[] = [];\n  constructor(options = {}) {\n    this.options = Object.assign({}, defaultOptions, options);\n    validateOptions(this.options);\n    const {\n      el,\n      height,\n      width,\n      leftPadding,\n      topPadding,\n      stringCount,\n      stringWidth,\n      fretCount,\n      scaleFrets,\n      tuning\n    } = this.options;\n\n    this.strings = generateStrings({ stringCount, height, stringWidth });\n    this.frets = generateFrets({ fretCount, scaleFrets });\n    const { totalWidth, totalHeight } = getDimensions(this.options);\n\n    this.system = new FretboardSystem({\n      fretCount,\n      tuning\n    });\n\n    this.positions = generatePositions({\n      ...this,\n      ...this.options\n    });\n\n    this.svg = (\n      typeof el === 'string'\n        ? select(el)\n        : select<BaseType, unknown>(el)\n    )\n      .append('div')\n      .attr('class', 'fretbard-html-wrapper')\n      .attr('style', 'position: relative')\n      .append('svg')\n      .attr('viewBox', `0 0 ${totalWidth} ${totalHeight}`);\n\n    this.wrapper = this.svg\n      .append('g')\n      .attr('class', 'fretboard-wrapper')\n      .attr(\n        'transform',\n        `translate(${leftPadding}, ${topPadding}) scale(${width / totalWidth})`\n      );\n  }\n\n  render(): Fretboard {\n    const {\n      wrapper,\n      positions,\n      dots\n    } = this;\n\n    const {\n      font,\n      dotStrokeColor,\n      dotStrokeWidth,\n      dotFill,\n      dotSize,\n      dotText,\n      dotTextSize,\n      disabledOpacity\n    } = this.options;\n\n    const dotOffset = this.getDotOffset();\n    this.baseRender(dotOffset);\n\n    wrapper.select('.dots').remove();\n\n    if (!dots.length) {\n      return this;\n    }\n\n    const dotGroup = wrapper\n      .append('g')\n      .attr('class', 'dots')\n      .attr('font-family', font);\n\n    const dotsNodes = dotGroup.selectAll('g')\n      .data(dots)\n      .enter()\n      .filter(({ fret }) => fret >= 0)\n      .append('g')\n      .attr('class', dot => ['dot', dotClasses(dot, '')].join(' '))\n      .attr('opacity', ({ disabled }) => disabled ? disabledOpacity : 1);\n\n    dotsNodes.append('circle')\n      .attr('class', 'dot-circle')\n      .attr('cx', ({ string, fret }) => `${positions[string - 1][fret - dotOffset].x}%`)\n      .attr('cy', ({ string, fret }) => positions[string - 1][fret - dotOffset].y)\n      .attr('r', dotSize * 0.5)\n      .attr('stroke', dotStrokeColor)\n      .attr('stroke-width', dotStrokeWidth)\n      .attr('fill', dotFill);\n\n    dotsNodes.append('text')\n      .attr('class', 'dot-text')\n      .attr('x', ({ string, fret }) => `${positions[string - 1][fret - dotOffset].x}%`)\n      .attr('y', ({ string, fret }) => positions[string - 1][fret - dotOffset].y)\n      .attr('text-anchor', 'middle')\n      .attr('dominant-baseline', 'central')\n      .attr('font-size', dotTextSize)\n      .text(dotText);\n\n    return this;\n  }\n\n  setDots(dots: Position[]): Fretboard {\n    this.dots = dots;\n    return this;\n  }\n\n  clear(): Fretboard {\n    this.setDots([]);\n    this.wrapper.select('.dots').remove();\n    return this;\n  }\n\n  style({\n    filter = (): boolean => true,\n    text,\n    fontSize,\n    fontFill,\n    ...opts\n  }: {\n    filter?: ValueFn<BaseType, unknown, boolean> | Rec;\n    text?: ValueFn<BaseType, unknown, string>;\n    fontSize?: number;\n    fontFill?: string;\n    [key: string]: string | number | Function | Rec;\n  }): Fretboard {\n    const { wrapper } = this;\n    const { dotTextSize } = this.options;\n    const filterFunction = filter instanceof Function\n      ? filter\n      : (dot: Position): boolean => {\n        const [key, value] = Object.entries(filter)[0];\n        return dot[key] === value;\n      };\n\n    const dots = wrapper.selectAll('.dot-circle')\n      .filter(filterFunction);\n\n    Object.keys(opts).forEach(\n      key => dots.attr(key, (opts as Rec)[key])\n    );\n\n    if (text) {\n      wrapper.selectAll('.dot-text')\n        .filter(filterFunction)\n        .text(text)\n        .attr('font-size', fontSize || dotTextSize)\n        .attr('fill', fontFill || DEFAULT_COLORS.dotText);\n    }\n\n    return this;\n  }\n\n  muteStrings(params: MuteStringsParams): Fretboard {\n    const {\n      wrapper,\n      positions\n    } = this;\n\n    const {\n      strings,\n      stroke,\n      strokeWidth,\n      width\n    } = { ...defaultMuteStringsParams, ...params };\n\n    wrapper\n      .append('g')\n      .attr('class', 'muted-strings')\n      .attr('transform', `translate(${-width / 2}, ${-width / 2})`)\n      .selectAll('path')\n      .data(strings)\n      .enter()\n      .append('path')\n      .attr('d', d => {\n        const { y } = positions[d - 1][0];\n        return [\n          `M 0 ${y}`,\n          `L ${width} ${y + width}`,\n          `M ${width} ${y}`,\n          `L 0 ${y + width}`\n        ].join(' ');\n      })\n      .attr('stroke', stroke)\n      .attr('stroke-width', strokeWidth)\n      .attr('class', 'muted-string');\n\n    return this;\n  }\n\n  renderChord(chord: string, barres?: Barre | Barre[]): Fretboard {\n    const { positions, mutedStrings: strings } = parseChord(chord);\n    this.setDots(positions);\n    if (barres) {\n      this.renderBarres([].concat(barres));\n    }\n    this.render();\n    this.muteStrings({ strings });\n    return this;\n  }\n\n  renderScale({\n    type,\n    root,\n    box\n  }: {\n    type: string;\n    root: string;\n    box?: {\n      system: Systems;\n      box: string | number;\n    };\n  }): Fretboard {\n    if (box && this.options.tuning.toString() !== GUITAR_TUNINGS.default.toString()) {\n      console.warn('Selected scale system works for standard tuning. Wrong notes may be highlighted.');\n    }\n    const dots = this.system.getScale({ type, root, box });\n    return this.setDots(dots).render();\n  }\n\n  renderBox({\n    type,\n    root,\n    box\n  }: {\n    type: string;\n    root: string;\n    box?: {\n      system: Systems;\n      box: string | number;\n    };\n  }): Fretboard {\n    if (this.options.tuning.toString() !== GUITAR_TUNINGS.default.toString()) {\n      console.warn('Selected scale system works for standard tuning. Wrong notes may be highlighted.');\n    }\n\n    const dots = this.system.getScale({ type, root, box }).filter(({ inBox }) => inBox);\n    return this.setDots(dots).render();\n  }\n\n  on(eventName: string, handler: FretboardHandler): Fretboard {\n    const {\n      svg,\n      options,\n      strings,\n      frets,\n      hoverDiv,\n      dots,\n      system\n    } = this;\n    const stringsGroup = svg.select('.strings');\n\n    if (!hoverDiv) {\n      this.hoverDiv = createHoverDiv(options);\n      (svg.node() as HTMLElement).parentNode.appendChild(this.hoverDiv);\n    }\n\n    if (this.handlers[eventName]) {\n      this.hoverDiv.removeEventListener(eventName, this.handlers[eventName]);\n    }\n    this.handlers[eventName] = throttle(\n      THROTTLE_INTERVAL,\n      (event: MouseEvent) => {\n        const position = getPositionFromMouseCoords({\n          event,\n          stringsGroup,\n          strings,\n          frets,\n          dots,\n          ...options\n        });\n        const note = system.getNoteAtPosition(position);\n        handler({ ...position, note }, event);\n      });\n\n    this.hoverDiv.addEventListener(eventName, this.handlers[eventName]);\n    return this;\n  }\n\n  removeEventListeners(): Fretboard {\n    const {\n      hoverDiv,\n      handlers\n    } = this;\n    if (!hoverDiv) {\n      return this;\n    }\n    Object\n      .entries(handlers)\n      .map(\n        ([eventName, handler]) => hoverDiv.removeEventListener(eventName, handler)\n      );\n    return this;\n  }\n\n  private renderBarres(barres: Barre[]): void {\n    const {\n      wrapper,\n      strings,\n      options,\n      positions\n    } = this;\n\n    const normalisedBarres = barres.map(({\n      fret,\n      stringFrom,\n      stringTo\n    }: Barre) => ({\n      fret,\n      stringFrom: stringFrom\n        ? Math.min(stringFrom, strings.length)\n        : strings.length,\n      stringTo: stringTo\n        ? Math.max(stringTo, 1)\n        : 1\n    }));\n\n    const { dotSize, barresColor } = options;\n    const dotOffset = this.getDotOffset();\n    const barreWidth = dotSize * .8;\n\n    const barresGroup = wrapper\n      .append('g')\n      .attr('class', 'barres')\n      .attr('transform', `translate(-${barreWidth * .5}, 0)`);\n\n    barresGroup\n      .selectAll('rect')\n      .data(normalisedBarres)\n      .enter()\n      .append('rect')\n      .attr('y', ({ fret, stringTo }: Barre) => positions[stringTo - 1][fret - dotOffset].y - dotSize * .75)\n      .attr('x', ({ fret, stringFrom }: Barre) => `${positions[stringFrom - 1][fret - dotOffset].x}%`)\n      .attr('rx', 7.5)\n      .attr('width', barreWidth)\n      .attr('height', ({ stringFrom, stringTo }: Barre) => strings[stringFrom - 1] - strings[stringTo - 1] + 1.5 * dotSize)\n      .attr('fill', barresColor);\n  }\n\n  private baseRender(dotOffset: number): void {\n    if (this.baseRendered) {\n      return;\n    }\n\n    const {\n      wrapper,\n      frets,\n      strings\n    } = this;\n\n    const {\n      height,\n      font,\n      nutColor,\n      nutWidth,\n      stringColor,\n      stringWidth,\n      fretColor,\n      fretWidth,\n      middleFretWidth,\n      middleFretColor,\n      showFretNumbers,\n      fretNumbersMargin,\n      fretNumbersColor,\n      topPadding\n    } = this.options;\n\n    const { totalWidth } = getDimensions(this.options);\n\n    const stringGroup = wrapper\n      .append('g')\n      .attr('class', 'strings');\n\n    stringGroup\n      .selectAll('line')\n      .data(strings)\n      .enter()\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', d => d)\n      .attr('x2', '100%')\n      .attr('y2', d => d)\n      .attr('stroke', stringColor)\n      .attr('stroke-width', (_d, i) => getStringThickness({ stringWidth, stringIndex: i }));\n\n    const fretsGroup = wrapper\n      .append('g')\n      .attr('class', 'frets');\n\n    fretsGroup\n      .selectAll('line')\n      .data(frets)\n      .enter()\n      .append('line')\n      .attr('x1', d => `${d}%`)\n      .attr('y1', 1)\n      .attr('x2', d => `${d}%`)\n      .attr('y2', height - 1)\n      .attr('stroke', (_d, i) => {\n        switch (i) {\n          case 0:\n            return nutColor;\n          case MIDDLE_FRET + 1:\n            return middleFretColor;\n          default:\n            return fretColor;\n        }\n      })\n      .attr('stroke-width', (_d, i) => {\n        switch (i) {\n          case 0:\n            return nutWidth;\n          case MIDDLE_FRET + 1:\n            return middleFretWidth;\n          default:\n            return fretWidth;\n        }\n      });\n\n    if (showFretNumbers) {\n      const fretNumbersGroup = wrapper\n        .append('g')\n        .attr('class', 'fret-numbers')\n        .attr('font-family', font)\n        .attr('transform',\n          `translate(0 ${fretNumbersMargin + topPadding + strings[strings.length - 1]})`\n        );\n\n      fretNumbersGroup\n        .selectAll('text')\n        .data(frets.slice(1))\n        .enter()\n        .append('text')\n        .attr('text-anchor', 'middle')\n        .attr('x', (d, i) => totalWidth / 100 * (d - (d - frets[i]) / 2))\n        .attr('fill', (_d, i) => i === MIDDLE_FRET ? middleFretColor : fretNumbersColor)\n        .text((_d, i) => `${i + 1 + dotOffset}`)\n    }\n\n    this.baseRendered = true;\n  }\n\n  private getDotOffset(): number {\n    const { dots } = this;\n    const { crop, fretLeftPadding } = this.options;\n    return crop\n      ? Math.max(0, Math.min(...dots.map(({ fret }) => fret)) - 1 - fretLeftPadding)\n      : 0;\n  }\n}\n","import { Position } from '../fretboard/Fretboard';\nimport { get as getInterval } from '@tonaljs/interval';\nimport { transpose } from '@tonaljs/note';\n\nexport enum TetrachordTypes {\n  Major = 'Major',\n  Minor = 'Minor',\n  Phrygian = 'Phrygian',\n  Harmonic = 'Harmonic',\n  Lydian = 'Lydian'\n}\n\nexport enum TetrachordLayouts {\n  Linear,\n  ThreePlusOne,\n  TwoPlusTwo,\n  OnePlusThree\n}\n\nconst Tetrachords = {\n  [TetrachordTypes.Major]: ['M2', 'M2', 'm2'],\n  [TetrachordTypes.Minor]: ['M2', 'm2', 'M2'],\n  [TetrachordTypes.Phrygian]: ['m2', 'M2', 'M2'],\n  [TetrachordTypes.Harmonic]: ['m2', 'A2', 'm2'],\n  [TetrachordTypes.Lydian]: ['M2', 'M2', 'M2']\n}\n\ntype TetrachordArgs = {\n  root: string;\n  type: TetrachordTypes;\n  layout: TetrachordLayouts;\n  string: number;\n  fret: number;\n};\n\nexport function tetrachord({\n  root,\n  type,\n  layout,\n  string,\n  fret\n}: TetrachordArgs = {\n  root: 'E',\n  type: TetrachordTypes.Major,\n  layout: TetrachordLayouts.Linear,\n  string: 6,\n  fret: 0\n}): Position[] {\n  const tetrachord = Tetrachords[type];\n  const pattern = [{\n    string,\n    fret,\n    note: root\n  }];\n\n  let partial = 0;\n  let currentNote = root;\n  if (layout === TetrachordLayouts.Linear) {\n    tetrachord.forEach(x => {\n      const { semitones } = getInterval(x);\n      currentNote = transpose(currentNote, x);\n      partial += semitones;\n      pattern.push({\n        string,\n        fret: fret + partial,\n        note: currentNote\n      });\n    });\n    return pattern;\n  }\n\n  if (string === 1) {\n    throw new Error('Cannot split a tetrachord over two strings if starting on the first one');\n  }\n\n  let currentString = string;\n\n  const splitIndex = ((): number => {\n    switch(layout) {\n      case TetrachordLayouts.ThreePlusOne:\n        return 2;\n      case TetrachordLayouts.TwoPlusTwo:\n        return 1;\n      case TetrachordLayouts.OnePlusThree:\n        return 0;\n    }\n  })();\n\n  tetrachord.forEach((x, i) => {\n    const { semitones } = getInterval(x);\n    currentNote = transpose(currentNote, x);\n    if (i === splitIndex) {\n      currentString -= 1;\n      partial = currentString === 2\n        ? partial - 4\n        : partial - 5;\n    }\n    partial += semitones;\n\n    const currentFret = fret + partial;\n\n    if (currentFret < 0) {\n      throw new Error('Cannot use this layout from this starting fret');\n    }\n\n    pattern.push({\n      string: currentString,\n      fret: currentFret,\n      note: currentNote\n    });\n  });\n\n  return pattern;\n}\n","import { Position } from '../fretboard/Fretboard';\n\nfunction transform({\n  box = [] as Position[],\n  from = { string: 6, fret: 0 },\n  to = { string: 1, fret: 100 },\n  action = (x: Position): Position => x\n} = {}): Position[] {\n  function inSelection({ string, fret }: {\n    string: number;\n    fret: number;\n  }): boolean {\n    if (string > from.string || string < to.string) {\n      return false;\n    }\n    if (string === from.string && fret < from.fret) {\n      return false;\n    }\n    if (string === to.string && fret > to.fret) {\n      return false;\n    }\n    return true;\n  }\n  return box.map(x => inSelection(x) ? action(x) : x);\n}\n\nexport function disableStrings({\n  box = [],\n  strings = []\n}: {\n  box: Position[];\n  strings: number[];\n}): Position[] {\n  return box.map(({ string, ...dot }) => ({\n    string,\n    disabled: strings.indexOf(string) > -1,\n    ...dot\n  }));\n}\n\nexport function sliceBox({\n  box = [] as Position[],\n  from = { string: 6, fret: 0 },\n  to = { string: 1, fret: 100 }\n} = {}): Position[] {\n  const sortedBox = box.slice().sort((a, b) => {\n    if (a.string > b.string) {\n      return -1;\n    }\n    if (a.fret > b.fret) {\n      return 1;\n    }\n    return -1;\n  });\n\n  function findIndex(key: {\n    string: number;\n    fret: number;\n  }): number {\n    return sortedBox.findIndex(({ string, fret }) =>\n      string === key.string && fret === key.fret\n    );\n  }\n\n  let fromIndex = findIndex(from);\n  if (fromIndex === -1) {\n    fromIndex = 0;\n  }\n  let toIndex = findIndex(to);\n  if (toIndex === -1) {\n    toIndex = sortedBox.length;\n  }\n  return sortedBox.slice(fromIndex, toIndex);\n}\n\nexport function disableDots({\n  box = [] as Position[],\n  from = { string: 6, fret: 0 },\n  to = { string: 1, fret: 100 }\n} = {}): Position[] {\n  const action = (dot: Position): Position => {\n    return { disabled: true, ...dot };\n  };\n  return transform({ box, from, to, action });\n}\n"],"names":["getChroma","getMode","getScale","getNote","chroma","getInterval"],"mappings":"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"}